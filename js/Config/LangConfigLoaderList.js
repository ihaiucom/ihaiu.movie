/////////////////////////////////////
// ihaiu.Language生成
// http://blog.ihaiu.com/tool-ExportXlsx
/////////////////////////////////////
var configs;
(function (configs) {
    /// 配置读取器列表
    var LangConfigLoaderList = /** @class */ (function () {
        function LangConfigLoaderList() {
            this.lang = "zh_cn";
            // 读取器列表
            this.renders = [];
            this.activities = new configs.LangConfigReader("Activities");
            this.actor = new configs.LangConfigReader("Actor");
            this.actorAide = new configs.LangConfigReader("ActorAide");
            this.actorAssets = new configs.LangConfigReader("ActorAssets");
            this.actorLevel = new configs.LangConfigReader("ActorLevel");
            this.actorLoyalty = new configs.LangConfigReader("ActorLoyalty");
            this.actorTrain = new configs.LangConfigReader("ActorTrain");
            this.avatar = new configs.LangConfigReader("Avatar");
            this.blockLevel = new configs.LangConfigReader("BlockLevel");
            this.boxTarget = new configs.LangConfigReader("BoxTarget");
            this.buildingEffect = new configs.LangConfigReader("BuildingEffect");
            this.buildingLevel = new configs.LangConfigReader("BuildingLevel");
            this.business = new configs.LangConfigReader("Business");
            this.cinema = new configs.LangConfigReader("Cinema");
            this.city = new configs.LangConfigReader("City");
            this.cityPopularize = new configs.LangConfigReader("CityPopularize");
            this.country = new configs.LangConfigReader("Country");
            this.dailySignTrailer = new configs.LangConfigReader("DailySignTrailer");
            this.dialogue = new configs.LangConfigReader("Dialogue");
            this.floor = new configs.LangConfigReader("Floor");
            this.gameLevel = new configs.LangConfigReader("GameLevel");
            this.gameRandomName = new configs.LangConfigReader("GameRandomName");
            this.guidesystem = new configs.LangConfigReader("Guidesystem");
            this.headPortrait = new configs.LangConfigReader("HeadPortrait");
            this.item = new configs.LangConfigReader("Item");
            this.mail = new configs.LangConfigReader("Mail");
            this.maintask = new configs.LangConfigReader("Maintask");
            this.meetingGame = new configs.LangConfigReader("MeetingGame");
            this.menu = new configs.LangConfigReader("Menu");
            this.monthCard = new configs.LangConfigReader("MonthCard");
            this.movieAdaptationMsg = new configs.LangConfigReader("MovieAdaptationMsg");
            this.movieAudienceEvaluation = new configs.LangConfigReader("MovieAudienceEvaluation");
            this.movieDrop = new configs.LangConfigReader("MovieDrop");
            this.movieExpect = new configs.LangConfigReader("MovieExpect");
            this.movieMediaVisit = new configs.LangConfigReader("MovieMediaVisit");
            this.movieMidiaEvaluation = new configs.LangConfigReader("MovieMidiaEvaluation");
            this.movieMidiaEvaluationMsg = new configs.LangConfigReader("MovieMidiaEvaluationMsg");
            this.movieShootType = new configs.LangConfigReader("MovieShootType");
            this.msg = new configs.LangConfigReader("Msg");
            this.msgProtoError = new configs.LangConfigReader("MsgProtoError");
            this.npc = new configs.LangConfigReader("Npc");
            this.order = new configs.LangConfigReader("Order");
            this.oscar = new configs.LangConfigReader("Oscar");
            this.produce = new configs.LangConfigReader("Produce");
            this.property = new configs.LangConfigReader("Property");
            this.recharge = new configs.LangConfigReader("Recharge");
            this.secretary = new configs.LangConfigReader("Secretary");
            this.secretaryText = new configs.LangConfigReader("SecretaryText");
            this.secretaryType = new configs.LangConfigReader("SecretaryType");
            this.settingDefault = new configs.LangConfigReader("SettingDefault");
            this.shop = new configs.LangConfigReader("Shop");
            this.skill = new configs.LangConfigReader("Skill");
            this.skillEffect = new configs.LangConfigReader("SkillEffect");
            this.skillTrigger = new configs.LangConfigReader("SkillTrigger");
            this.speak = new configs.LangConfigReader("Speak");
            this.story = new configs.LangConfigReader("Story");
            this.storyCharacters = new configs.LangConfigReader("StoryCharacters");
            this.storyline = new configs.LangConfigReader("Storyline");
            this.storyStackSort = new configs.LangConfigReader("StoryStackSort");
            this.street = new configs.LangConfigReader("Street");
            this.task = new configs.LangConfigReader("Task");
            this.textCode = new configs.LangConfigReader("TextCode");
            this.textFgui = new configs.LangConfigReader("TextFgui");
            this.unlock = new configs.LangConfigReader("Unlock");
            this.visit = new configs.LangConfigReader("Visit");
            this.welfare = new configs.LangConfigReader("Welfare");
            this.writer = new configs.LangConfigReader("Writer");
            this.writerAdaptEffect = new configs.LangConfigReader("WriterAdaptEffect");
            this.writerLevel = new configs.LangConfigReader("WriterLevel");
        }
        // 初始化读取器列表
        LangConfigLoaderList.prototype.initList = function () {
            this.renders.push(this.activities);
            this.renders.push(this.actor);
            this.renders.push(this.actorAide);
            this.renders.push(this.actorAssets);
            this.renders.push(this.actorLevel);
            this.renders.push(this.actorLoyalty);
            this.renders.push(this.actorTrain);
            this.renders.push(this.avatar);
            this.renders.push(this.blockLevel);
            this.renders.push(this.boxTarget);
            this.renders.push(this.buildingEffect);
            this.renders.push(this.buildingLevel);
            this.renders.push(this.business);
            this.renders.push(this.cinema);
            this.renders.push(this.city);
            this.renders.push(this.cityPopularize);
            this.renders.push(this.country);
            this.renders.push(this.dailySignTrailer);
            this.renders.push(this.dialogue);
            this.renders.push(this.floor);
            this.renders.push(this.gameLevel);
            this.renders.push(this.gameRandomName);
            this.renders.push(this.guidesystem);
            this.renders.push(this.headPortrait);
            this.renders.push(this.item);
            this.renders.push(this.mail);
            this.renders.push(this.maintask);
            this.renders.push(this.meetingGame);
            this.renders.push(this.menu);
            this.renders.push(this.monthCard);
            this.renders.push(this.movieAdaptationMsg);
            this.renders.push(this.movieAudienceEvaluation);
            this.renders.push(this.movieDrop);
            this.renders.push(this.movieExpect);
            this.renders.push(this.movieMediaVisit);
            this.renders.push(this.movieMidiaEvaluation);
            this.renders.push(this.movieMidiaEvaluationMsg);
            this.renders.push(this.movieShootType);
            this.renders.push(this.msg);
            this.renders.push(this.msgProtoError);
            this.renders.push(this.npc);
            this.renders.push(this.order);
            this.renders.push(this.oscar);
            this.renders.push(this.produce);
            this.renders.push(this.property);
            this.renders.push(this.recharge);
            this.renders.push(this.secretary);
            this.renders.push(this.secretaryText);
            this.renders.push(this.secretaryType);
            this.renders.push(this.settingDefault);
            this.renders.push(this.shop);
            this.renders.push(this.skill);
            this.renders.push(this.skillEffect);
            this.renders.push(this.skillTrigger);
            this.renders.push(this.speak);
            this.renders.push(this.story);
            this.renders.push(this.storyCharacters);
            this.renders.push(this.storyline);
            this.renders.push(this.storyStackSort);
            this.renders.push(this.street);
            this.renders.push(this.task);
            this.renders.push(this.textCode);
            this.renders.push(this.textFgui);
            this.renders.push(this.unlock);
            this.renders.push(this.visit);
            this.renders.push(this.welfare);
            this.renders.push(this.writer);
            this.renders.push(this.writerAdaptEffect);
            this.renders.push(this.writerLevel);
        };
        return LangConfigLoaderList;
    }());
    configs.LangConfigLoaderList = LangConfigLoaderList;
})(configs || (configs = {}));
//# sourceMappingURL=LangConfigLoaderList.js.map